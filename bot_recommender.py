import asyncio                       # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –±—ñ–±–ª—ñ–æ—Ç–µ–∫—É –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ñ—Å—Ç—é
import random                        # –î–ª—è –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –≤–∏–±–æ—Ä—É –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –∑—ñ —Å–ø–∏—Å–∫—É

#–Ü–º–ø–æ—Ä—Ç—É—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ aiogram –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ Telegram Bot API
from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode                   # –î–ª—è –≤–∫–∞–∑–∞–Ω–Ω—è HTML-—Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
from aiogram.types import Message, CallbackQuery      # –ö–ª–∞—Å–∏ –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —Ç–∞ –æ–±—Ä–æ–±–∫–∏ callback-–∫–Ω–æ–ø–æ–∫
from aiogram.filters import Command                   # –§—ñ–ª—å—Ç—Ä –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –∫–æ–º–∞–Ω–¥ —Ç–∏–ø—É /start, /help
from aiogram.utils.keyboard import InlineKeyboardBuilder   # –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
from aiogram.client.default import DefaultBotProperties    # –î–ª—è –∑–∞–¥–∞–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π –±–æ—Ç–∞

#–í–∫–∞–∑—É—î–º–æ —Ç–æ–∫–µ–Ω, –æ—Ç—Ä–∏–º–∞–Ω–∏–π —É BotFather
BOT_TOKEN = "7819021093:AAHXJocKF9Rndc6j9IwrVhOMow8XAw7oS9Q"

#–°–ø–∏—Å–æ–∫ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö –º—É–∑–∏—á–Ω–∏—Ö –∫–æ–º–ø–æ–∑–∏—Ü—ñ–π
ukrainian_music = [
    "Go_A ‚Äì –®—É–º", "Kalush Orchestra ‚Äì Stefania", "–û–∫–µ–∞–Ω –ï–ª—å–∑–∏ ‚Äì –ë–µ–∑ –±–æ—é",
    "–î–∞—Ö–∞–ë—Ä–∞—Ö–∞ ‚Äì Baby", "alyona alyona ‚Äì –ü—É—à–∫–∞", "–ê–Ω—Ç–∏—Ç—ñ–ª–∞ ‚Äì TDME",
    "The Hardkiss ‚Äì –ñ—É—Ä–∞–≤–ª—ñ", "Wellboy ‚Äì –ì—É—Å–∏"
]

#–°–ø–∏—Å–æ–∫ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö —Ñ—ñ–ª—å–º—ñ–≤
ukrainian_movies = [
    "–ó–∞—Ö–∞—Ä –ë–µ—Ä–∫—É—Ç (2019)", "–ö—ñ–±–æ—Ä–≥–∏ (2017)", "–ü–æ–≤–æ–¥–∏—Ä (2014)",
    "–î–æ–¥–æ–º—É (2019)", "–ú–æ—ó –¥—É–º–∫–∏ —Ç–∏—Ö—ñ (2019)", "–ü–ª–µ–º'—è (2014)",
    "–¢—ñ–Ω—ñ –∑–∞–±—É—Ç–∏—Ö –ø—Ä–µ–¥–∫—ñ–≤ (1965)", "–í—ñ–¥–¥–∞–Ω–∞ (2020)"
]

#–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –æ–±'—î–∫—Ç–∞ –±–æ—Ç–∞ –∑ HTML-—Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è–º –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
bot = Bot(
    token=BOT_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)

#–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
dp = Dispatcher()

#–§—É–Ω–∫—Ü—ñ—è, —â–æ –ø–æ–≤–µ—Ä—Ç–∞—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –∫–Ω–æ–ø–∫–∞–º–∏ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
def main_menu():
    kb = InlineKeyboardBuilder()    # –°—Ç–≤–æ—Ä—é—î–º–æ builder –¥–ª—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
    kb.button(text="üéµ –ú—É–∑–∏–∫–∞", callback_data="get_music")     # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –º—É–∑–∏–∫–∏
    kb.button(text="üé¨ –§—ñ–ª—å–º–∏", callback_data="get_movies")    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Ñ—ñ–ª—å–º—ñ–≤
    kb.button(text="‚ÑπÔ∏è –ü—Ä–æ –±–æ—Ç–∞", callback_data="get_info")   # –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ –±–æ—Ç–∞"
    kb.button(text="üö™ –í–∏—Ö—ñ–¥", callback_data="exit")           # –ö–Ω–æ–ø–∫–∞ –≤–∏—Ö–æ–¥—É
    kb.adjust(2)                     # –í—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏ –∫–Ω–æ–ø–∫–∏ –ø–æ 2 –≤ —Ä—è–¥
    return kb.as_markup()           # –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –≥–æ—Ç–æ–≤—É –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É

#–û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /start
@dp.message(Command("start"))
async def start_cmd(message: Message):
    await message.answer(                      # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        "üëã –í—ñ—Ç–∞—é! –Ø –±–æ—Ç-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ç–æ—Ä —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –º—É–∑–∏–∫–∏ —Ç–∞ —Ñ—ñ–ª—å–º—ñ–≤.\n\n–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:",
        reply_markup=main_menu()               # –î–æ–¥–∞—î–º–æ –¥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
    )

#–û–±—Ä–æ–±–∫–∞ –∫–æ–º–∞–Ω–¥–∏ /help
@dp.message(Command("help"))
async def help_cmd(message: Message):
    await message.answer(                      # –í–∏–≤–æ–¥–∏–º–æ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—é
        "–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂—á–µ –∞–±–æ –Ω–∞–±–µ—Ä—ñ—Ç—å /start –¥–ª—è –∑–∞–ø—É—Å–∫—É –º–µ–Ω—é."
    )

#–û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–ú—É–∑–∏–∫–∞"
@dp.callback_query(lambda c: c.data == "get_music")
async def recommend_music(callback: CallbackQuery):
    music = random.sample(ukrainian_music, 3)          # –í–∏–ø–∞–¥–∫–æ–≤–æ –≤–∏–±–∏—Ä–∞—î–º–æ 3 –ø—ñ—Å–Ω—ñ –∑—ñ —Å–ø–∏—Å–∫—É
    await callback.message.answer(                     # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Å–ø–∏—Å–æ–∫ –ø—ñ—Å–µ–Ω—å
        "üéµ –ú—É–∑–∏—á–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:\n" +
        "\n".join(f"‚Äì {m}" for m in music)              # –§–æ—Ä–º–∞—Ç—É—î–º–æ —Å–ø–∏—Å–æ–∫ —É –≤–∏–≥–ª—è–¥—ñ –º–∞—Ä–∫–æ–≤–∞–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç—É
    )
    await callback.answer()                            # –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î–º–æ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏

#–û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–§—ñ–ª—å–º–∏"
@dp.callback_query(lambda c: c.data == "get_movies")
async def recommend_movies(callback: CallbackQuery):
    movies = random.sample(ukrainian_movies, 3)         # –í–∏–ø–∞–¥–∫–æ–≤—ñ 3 —Ñ—ñ–ª—å–º–∏
    await callback.message.answer(                      # –í—ñ–¥–ø–æ–≤—ñ–¥—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
        "üé¨ –ö—ñ–Ω–æ—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:\n" +
        "\n".join(f"‚Äì {m}" for m in movies)
    )
    await callback.answer()                             # –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è callback

#–û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ –±–æ—Ç–∞"
@dp.callback_query(lambda c: c.data == "get_info")
async def bot_info(callback: CallbackQuery):
    await callback.message.answer(                      # –í–∏–≤–æ–¥–∏–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –±–æ—Ç–∞
        "‚ÑπÔ∏è –¶–µ–π –±–æ—Ç —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É.\n–ê–≤—Ç–æ—Ä: —Å—Ç—É–¥–µ–Ω—Ç –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ—ó ‚Ññ18."
    )
    await callback.answer()

#–û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–í–∏—Ö—ñ–¥"
@dp.callback_query(lambda c: c.data == "exit")
async def exit_callback(callback: CallbackQuery):
    await callback.message.answer(                      # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
        "üëã –î—è–∫—É—î–º–æ –∑–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –±–æ—Ç–∞! –î–æ –∑—É—Å—Ç—Ä—ñ—á—ñ."
    )
    await callback.answer()

#–ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª—É –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)                         # –ó–∞–ø—É—Å–∫–∞—î–º–æ –æ–±—Ä–æ–±–∫—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å

#–¢–æ—á–∫–∞ –≤—Ö–æ–¥—É –≤ –ø—Ä–æ–≥—Ä–∞–º—É
if __name__ == "__main__":
    asyncio.run(main())                                 # –ó–∞–ø—É—Å–∫–∞—î–º–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É –ø–æ–¥—ñ—é main()
